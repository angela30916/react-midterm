{"version":3,"sources":["components/AddList.jsx","components/AddCard.jsx","components/Card.jsx","components/List.jsx","App.js","reportWebVitals.js","index.js"],"names":["AddList","props","useState","name","setName","isEditing","setEditing","editingTemplate","onSubmit","e","preventDefault","addTask","type","value","onChange","target","onClick","viewTemplate","className","AddCard","addCard","Card","id","List","cards","setCards","cardList","map","card","newCard","nanoid","DATA","App","tasks","setTasks","taskList","task","newTask","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1592377e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./AddList.css\";\n\nfunction AddList(props) {\n  const [name, setName] = useState(\"\");\n\n  const [isEditing, setEditing] = useState(false);\n\n  function handleChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (name) {\n      props.addTask(name);\n      setName(\"\");\n    }\n  }\n\n  const editingTemplate = (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={name} onChange={handleChange} />\n      <br />\n      <br />\n      <button type=\"submit\">\n        <span>Add list</span>\n      </button>\n      <button type=\"button\" onClick={() => setEditing(false)}>\n        <span>X</span>\n      </button>\n    </form>\n  );\n\n  const viewTemplate = (\n    <button type=\"button\" onClick={() => setEditing(true)}>\n      <span>＋ Add a list</span>\n    </button>\n  );\n\n  return (\n    <div className=\"memo\">{isEditing ? editingTemplate : viewTemplate}</div>\n  );\n}\n\nexport default AddList;\n","import React, { useState } from \"react\";\nimport \"./AddCard.css\";\n\nfunction AddCard(props) {\n  const [name, setName] = useState(\"\");\n\n  const [isEditing, setEditing] = useState(false);\n\n  function handleChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (name) {\n      props.addCard(name);\n      setName(\"\");\n    }\n  }\n\n  const editingTemplate = (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={name} onChange={handleChange} />\n      <br />\n      <br />\n      <button type=\"submit\">\n        <span>Add card</span>\n      </button>\n      <button type=\"button\" onClick={() => setEditing(false)}>\n        <span>X</span>\n      </button>\n    </form>\n  );\n\n  const viewTemplate = (\n    <button type=\"button\" onClick={() => setEditing(true)}>\n      <span>＋ Add a card</span>\n    </button>\n  );\n\n  return (\n    <div className=\"newCard\">{isEditing ? editingTemplate : viewTemplate}</div>\n  );\n}\n\nexport default AddCard;\n","import React from \"react\";\nimport \"./Card.css\";\n\nfunction Card(props) {\n  return (\n    <div className=\"card\" id={props.id}>\n      {props.name}\n    </div>\n  );\n}\n\nexport default Card;\n","import React, { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport AddCard from \"./AddCard\";\nimport Card from \"./Card\";\nimport \"./List.css\";\n\nfunction List(props) {\n  const [cards, setCards] = useState(props.cards);\n\n  function addCard(name) {\n    const newCard = { id: \"card-\" + nanoid(), name: name };\n    setCards([...cards, newCard]);\n  }\n\n  const cardList = cards.map((card) => (\n    <Card id={card.id} name={card.name} key={card.id} />\n  ));\n\n  return (\n    <div className=\"task\" id={props.id}>\n      {props.name}\n      {cardList}\n      <AddCard addCard={addCard} />\n    </div>\n  );\n}\n\nexport default List;\n","import React, { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport AddList from \"./components/AddList\";\nimport List from \"./components/List\";\nimport \"./App.css\";\n\nconst DATA = [];\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n\n  function addTask(name) {\n    const newTask = { id: \"task-\" + nanoid(), name: name };\n    setTasks([...tasks, newTask]);\n  }\n  const taskList = tasks.map((task) => (\n    <List id={task.id} name={task.name} key={task.id} cards={DATA} />\n  ));\n\n  return (\n    <div className=\"App\">\n      {taskList}\n      <AddList addTask={addTask} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst DATA = [];\n\nReactDOM.render(\n  <React.StrictMode>\n    <App tasks={DATA} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}